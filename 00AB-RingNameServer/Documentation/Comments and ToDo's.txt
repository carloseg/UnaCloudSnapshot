Chandy-Lamport Algorithm ToDo:
1) Explicar las suposiciones y restricciones:
	a) En cada máquina física solo hay una máquina virtual.
	b) Cada máquina física tiene una única interfaz de red a través de la cual se comunica
	la máquina virtual alojada.
	
	c) Asumimos canales FIFO dado que el tráfico que captura la interfaz de red se agrega
	al final de un archivo - Ver VCCP o VIOLIN (para ver la explicacion).
	
	d) Todos los nodos saben cuántos nodos hay en el sistema. Se asume que esta información 
	   la conoce el servidor de nombres que solo funciona para
		cada ejecución.
	e) Cualquier proceso puede lanzar el estado global. Por ahora se lanza manualmente en el
	   momento en que se ejecuta la aplicación.
	f) Se pueden añadir algunas pausas para ver el algoritmo en acción, modificando la 
	   propiedad PAUSE en el archivo configuration.properties.

1) 
2) Registrar el tiempo que tarda la toma del snapshot y de los archivos que produce, el nombre con su ruta y el tamaño, y el tamaño total.
3) Definir cómo se van a asignar nombres a los snapshots cuando se capture el estado local de un proceso.
4) Definir cómo se va a dar a conocer el número de nodos en el sistema. Inicialmente el servidor de nombres retorna el tamaño del directorio.
5) Definir si el broadcast le llega al que lo envía o no.
6) Establecer la estrategia para tomar más de un estado global (números de secuencia).
7) 
8) Verificar dónde se pueden poner pausas para que sea más fácil ver el proceso.
9) 
10) Revisar la documentación del programa.
11) Definir las métricas para incluirlas en el programa.
12) 
13) 
14) 
15) Hacer coincidir el codigo del programa con la animación.
16) 
17) Como manejar las propiedades en un archivo cuando se lleve a un jar en las VMs para que se
    puedan modificar.
18) Hay que decidir en el algoritmo si primero cierra el canal y luego captura el estado local
    o al revés.
19) Depurar comentarios.

Observaciones

Se utiliza un servidor de nombres para que maneje la informacion de los servidores que
se han unido al sistema.

Cada servidor se registra en el servidor de nombres al ingresar al sistema.

Un servidor consulta al servidor de nombres por una lista de servidores registrados y le
devuelve una lista con todos los demás, excepto quien la solicitó.

No considera la salida de los servidores antes de tiempo ni la entrada de ellos despues de
iniciada la ejecucion.

LAS CONEXIONES NO SE MANTIENEN ABIERTAS.

Los mensajes de capa de aplicación que llegan por la red no se detienen. Se pasan a la VM, a 
pesar de estar capturándolos en el archivo especificado. Si la VM no tiene que regresar al
estado guardado en el snapshot, no pasa nada. Si es necesario regresar, simplemente los mensajes
de capa de aplicación que llegan después de tomado el snapshot local y que no haya quedado en
tránsito, se pierde. Por lo tanto, la ejecución de la aplicación no se detiene.

No tenemos una solicitud de TOMAR SNAPSHOT, para eso es el primer marker.

//						String s = executeTCPDump();
//						serverLog.info(s);
						System.out.println("========================================");
						System.out.println("CAPTURA DE PAQUETES P2");
						System.out.println("========================================");			



